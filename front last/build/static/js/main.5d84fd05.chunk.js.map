{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","fSubmit","e","preventDefault","console","log","datas","state","list","name","refs","value","caption","url","data","act","axios","post","then","res","setState","previousState","index","MemeOwner","MemeCaption","MemeUrl","myForm","reset","focus","fRemove","i","id","_id","delete","splice","fEdit","patch","title","this","get","className","class","ref","for","type","placeholder","required","onClick","map","src","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d84fd05.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"Meme Stream\",\n      act: 0,\n      index: \"\",\n      datas: [],\n      list: [],\n    };\n  }\n\n  componentDidMount() {\n    this.refs.name.focus();\n    axios.get(\"https://memestreams.herokuapp.com/memes\").then((res) => {\n      console.log(res.data);\n      this.setState({ list: res.data });\n    });\n  }\n\n  fSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"try\");\n\n    let datas = this.state.list;\n    let name = this.refs.name.value;\n    let caption = this.refs.caption.value;\n    let url = this.refs.url.value;\n\n    let data = {\n      name: name,\n      caption: caption,\n      url: url,\n    };\n\n    if (this.state.act === 0) {\n      //new\n\n      const header = {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": true,\n      };\n      const headers = { \"Access-Control-Allow-Origin\": \"*\" };\n\n      axios\n        .post(\"https://memestreams.herokuapp.com/memes\", data)\n        .then((res) => {\n          console.log(res);\n          console.log(res.data);\n          this.setState((previousState) => ({\n            list: [res.data, ...previousState.list],\n          }));\n        });\n    } else {\n      //update\n\n      let index = this.state.index;\n      datas[index].MemeOwner = name;\n      datas[index].MemeCaption = caption;\n      datas[index].MemeUrl = url;\n    }\n    console.log(datas);\n    this.setState({\n      datas: datas,\n      act: 0,\n    });\n\n    this.refs.myForm.reset();\n    this.refs.name.focus();\n  };\n\n  fRemove = (i) => {\n    //delete\n    console.log(\"in del\");\n    const list = this.state.list;\n    const data = this.state.list[i];\n    // console.log(data);\n    const id = data._id;\n    // console.log(i);\n\n    axios\n      .delete(\"https://memestreams.herokuapp.com/memes/\" + id, data)\n      .then((res) => {\n        list.splice(i, 1);\n        this.setState({\n          datas: list,\n        });\n      });\n    console.log(\"after del\", list);\n\n    this.refs.myForm.reset();\n    this.refs.name.focus();\n  };\n\n  fEdit = (i) => {\n    //edit\n    let data = this.state.list[i];\n    const id = data._id;\n    axios\n      .patch(\"https://memestreams.herokuapp.com/memes/\" + id, data)\n      .then((res) => {\n        console.log(res);\n        console.log(res.data);\n        this.refs.name.value = data.MemeOwner;\n        this.refs.caption.value = data.MemeCaption;\n        this.refs.url.value = data.MemeUrl;\n        this.setState({\n          act: 1,\n          index: i,\n        });\n      });\n\n    this.refs.name.focus();\n  };\n\n  render() {\n    let datas = this.state.datas;\n\n    return (\n      <div className=\"App\">\n        <div class=\"fixed\">\n          <h1 class=\"mb-4 center\">{this.state.title}</h1>\n\n          <div class=\"container\">\n            <form ref=\"myForm\" className=\"myForm \">\n              <div class=\"form-group\">\n                <label for=\"name\">Meme Owner</label>\n                <input\n                  type=\"text\"\n                  ref=\"name\"\n                  placeholder=\"Enter your full name\"\n                  className=\"form-control\"\n                />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"caption\">Meme Caption</label>\n                <input\n                  type=\"text\"\n                  ref=\"caption\"\n                  placeholder=\"Be innovative with your caption\"\n                  className=\"form-control\"\n                />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"url\">Meme URL</label>\n                <input\n                  required\n                  type=\"text\"\n                  ref=\"url\"\n                  placeholder=\"Enter URL of meme\"\n                  className=\"form-control\"\n                />\n              </div>\n              <button\n                onClick={(e) => this.fSubmit(e)}\n                className=\"btn btn-primary\"\n              >\n                Submit Meme{\" \"}\n              </button>\n              <hr></hr>\n            </form>\n          </div>\n        </div>\n        <div class=\"cards\">\n          {this.state.list.map((data, i) => (\n            <div class=\"container \">\n              <div class=\"Meme-card \">\n                <div key={i}>\n                  <h4 class=\"Meme-card-header\">{data.MemeOwner}</h4>\n                  <div class=\"Meme-card-header\"> {data.MemeCaption}</div>\n                  <div class=\"card-text mb-2 mx \">\n                    <img class=\"Meme-card-img \" src={data.MemeUrl} />\n                  </div>\n                  <div class=\"d-inline  mb-4 Meme-card-footer\">\n                    <button\n                      onClick={() => this.fEdit(i)}\n                      className=\"btn btn-info mx\"\n                    >\n                      Edit{\" \"}\n                    </button>\n                    <button\n                      class=\"d-inline\"\n                      onClick={() => this.fRemove(i)}\n                      className=\"btn btn-danger mx \"\n                    >\n                      Delete{\" \"}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}